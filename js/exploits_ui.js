var temp_exploits;

// Event bindings
$("#exp_btn_edit_exploits").on("click", edit_exploits_modal);
$("#exp_edit_exploits_modal_source").on("change", edit_exploits_modal_source);
$("#exp_edit_exploits_modal_exploit").on("change", edit_exploits_modal_exploit);
$("#exp_edit_exploits_modal_add").on("click", edit_exploits_modal_add);
$("#exp_edit_exploits_modal_remove").on("click", edit_exploits_modal_remove);
$("#exp_edit_exploits_modal_save").on("click", edit_exploits_modal_accept);

function refresh_exploits() {
    let user_character = get_user_character();
    let curr_exploit = null;
    $("#exp_exploits_list").html('');
    for (let exploit in user_character.misc_exploits) {
        curr_exploit = user_character.misc_exploits[exploit];
        $("#exp_exploits_list").append("<li data-toggle='tooltip' data-placement='left' title=\"" + exploit_dict[curr_exploit.source][curr_exploit.id]['desc'] + "\">" + exploit_dict[curr_exploit.source][curr_exploit.id]['name'] + "</li>")
    }
    enable_tooltips();
}

function edit_exploits_modal() {
    let user_character = get_user_character();
    let curr_exploit = null;
    temp_exploits = new Map();
    for (let exploit in user_character.misc_exploits) {
        curr_exploit = user_character.misc_exploits[exploit]
        temp_exploits.set(exploit_dict[curr_exploit.source][curr_exploit.id]['name'], curr_exploit);
    }
    $("#exp_edit_exploits_modal").modal();
    $("#exp_edit_exploits_modal_source").val('android');
    edit_exploits_modal_source();
    edit_exploits_modal_refresh();
    enable_tooltips();
}

function edit_exploits_modal_source() {
    let exploit_source = $("#exp_edit_exploits_modal_source").val();
    $("#exp_edit_exploits_modal_exploit").empty();
    for (let exploit in exploit_dict[exploit_source]) {
        $("#exp_edit_exploits_modal_exploit").append($('<option value=' + exploit + '>' + exploit_dict[exploit_source][exploit]['name'] + '</option>'));

    }
    edit_exploits_modal_exploit();
}

function edit_exploits_modal_exploit() {
    let exploit_source = $("#exp_edit_exploits_modal_source").val();
    let selected_exploit = $("#exp_edit_exploits_modal_exploit").val();
    $("#exp_edit_exploits_modal_exploit_desc").html(exploit_dict[exploit_source][selected_exploit]['desc']);
}

function edit_exploits_modal_add() {
    let exploit_source = $("#exp_edit_exploits_modal_source").val();
    let selected_exploit = $("#exp_edit_exploits_modal_exploit").val();
    temp_exploits = temp_exploits.set(exploit_dict[exploit_source][selected_exploit]['name'], {'source': exploit_source, 'id': selected_exploit});
    temp_exploits = new Map([...temp_exploits.entries()].sort());
    edit_exploits_modal_refresh();
}

function edit_exploits_modal_remove() {
    let selected_curr_exploits = $("#exp_edit_exploits_modal_exploits_list").val();
    if (selected_curr_exploits.length > 0) {
        for (let exploit in selected_curr_exploits) {
            temp_exploits.delete(selected_curr_exploits[exploit]);
        }
        edit_exploits_modal_refresh();
    }
}

function edit_exploits_modal_refresh() {
    $("#exp_edit_exploits_modal_exploits_list").empty();
    for (let exploit of temp_exploits.values()) {
        $("#exp_edit_exploits_modal_exploits_list").append($('<option data-value=' + exploit + '>' + exploit_dict[exploit.source][exploit.id]['name'] + '</option>'));
    }
}

function edit_exploits_modal_accept() {
    let user_character = get_user_character();
    let new_misc_exploits = [];
    for (let exploit of temp_exploits.values()) {
        new_misc_exploits.push(exploit);
    }
    user_character.misc_exploits = new_misc_exploits;
    save_character(user_character);
    $("#exp_edit_exploits_modal").modal('toggle');
    refresh_exploits();
}